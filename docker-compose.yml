version: '3.8'

services:
  # Neo4j Memory - Centralized Graph Database for MCP AI Memory
  # Serves all development projects: DADMS, ProcOS, future projects
  neo4j-memory:
    image: docker.io/neo4j:5.13
    container_name: mcp-neo4j-memory
    environment:
      NEO4J_AUTH: neo4j/memorypassword
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_apoc_export_file_enabled: true
      NEO4J_apoc_import_file_enabled: true
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
      # Memory settings (uncomment for production)
      #NEO4J_dbms_memory_heap_initial_size: 256m
      #NEO4J_dbms_memory_heap_max_size: 512m
    ports:
      - "7475:7474"   # HTTP interface (Web UI)
      - "7688:7687"   # Bolt protocol (MCP connection)
    volumes:
      - mcp-neo4j-memory-data:/data
      - mcp-neo4j-memory-backups:/backups
      - ./import:/var/lib/neo4j/import  # For backup/restore operations
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:7474 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - mcp-memory-network

volumes:
  mcp-neo4j-memory-data:
    driver: local
  mcp-neo4j-memory-backups:
    driver: local

networks:
  mcp-memory-network:
    driver: bridge
    name: mcp-memory-network

# Usage:
# 1. Start: docker-compose up -d
# 2. Stop: docker-compose down
# 3. View logs: docker-compose logs -f neo4j-memory
# 4. Access Web UI: http://localhost:7475
# 5. Bolt connection: bolt://localhost:7688